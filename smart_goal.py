import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import train_test_split

df=pd.read_csv("examples.csv")
#examples.csv was generated by AI 
x_train,x_test,y_train,y_test=train_test_split(df["goal_text"], df["eating_goal"], test_size=0.3)

main_tfidf=TfidfVectorizer()
tfidf_x_train=main_tfidf.fit_transform(x_train)

main_clf=MultinomialNB()
main_clf.fit(tfidf_x_train,y_train)

x_train2, x_test2, y_train2, y_test2 = train_test_split(df["goal_text"], df["adaptaction_goal"], test_size=0.3)

functional_tfidf=TfidfVectorizer()

tfidf_x_train2=functional_tfidf.fit_transform(x_train2)

functional_clf= MultinomialNB()
functional_clf.fit(tfidf_x_train2, y_train2)

def get_true_goal(users_input_goal):
    vector_eating = main_tfidf.transform([users_input_goal])
    vector_adaptaction = functional_tfidf.transform([users_input_goal])

    eating=main_clf.predict(vector_eating)[0]
    adaptation=functional_clf.predict(vector_adaptaction)[0]

    return f"{eating}_{adaptation}"

